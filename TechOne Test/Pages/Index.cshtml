@page
@model TechOne_Test.Pages.IndexModel
@{
    ViewData["Title"] = "Number to words";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <div class="card shadow-sm border-0 rounded-3">
                <div class="card-body p-4">
                    <h1 class="h4 mb-3">Number to words</h1>
                    <p class="text-muted mb-4">
                        Enter a dollar amount.
                    </p>

                    <form method="post" id="convertForm" novalidate>
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label for="amount" class="form-label">Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input id="amount"
                                       name="Amount"
                                       class="form-control"
                                       type="text"
                                       inputmode="decimal"
                                       autocomplete="off"
                                       placeholder="e.g. 123.45"
                                       aria-describedby="amountHelp"
                                       aria-invalid="@(string.IsNullOrEmpty(Model.Error) ? "false" : "true")"
                                       pattern="^\d+(?:\.\d{1,2})?$"    
                                maxlength="15"                 
                                value="@Model.Amount" />

                                <button class="btn btn-primary" type="submit" id="convertBtn">Convert</button>
                            </div>
                            <div id="amountHelp" class="form-text">
                                Use a dot as the decimal separator. Max supported amount: @Model.MaxAmountDisplay
                            </div>

                        </div>
                        @if (!string.IsNullOrEmpty(Model.Error))
                        {
                            <div class="alert alert-danger" role="alert" aria-live="polite">@Model.Error</div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Result))
                        {
                            <div class="alert alert-success d-flex align-items-start" role="alert" aria-live="polite">
                                <div class="flex-grow-1">
                                    <div class="fw-semibold mb-1">Result</div>
                                    <code class="d-block fs-6 text-wrap" id="resultText">@Model.Result</code>
                                </div>
                            </div>
                        }

                    </form>

                    <hr class="my-4" />
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const amt = document.getElementById('amount');

        amt.addEventListener('input', () => {
          // Keep only: digits + optional "." + up to 2 decimals only as cents dont go more than that 
          let v = amt.value;
          const m = v.match(/^\d*(?:\.\d{0,2})?/);
          v = m ? m[0] : '';

          // If it starts with ".", make it "0."
          if (v.startsWith('.')) v = '0' + v;


          // TODO  If it ends with . add 00 at the end of it.
          // if (v.endsWith('.')) v += '00';

          // Write back only if changed
          if (amt.value !== v) amt.value = v;



        });
    </script>
}
